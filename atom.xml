<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>coffeesweet</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.coffeesweet.me/"/>
  <updated>2016-09-06T07:48:11.226Z</updated>
  <id>http://www.coffeesweet.me/</id>
  
  <author>
    <name>coffeesweet</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>新上线java工程的常规检查工作</title>
    <link href="http://www.coffeesweet.me/2016/09/06/%E6%96%B0%E4%B8%8A%E7%BA%BFjava%E5%B7%A5%E7%A8%8B%E7%9A%84%E5%B8%B8%E8%A7%84%E6%A3%80%E6%9F%A5%E5%B7%A5%E4%BD%9C/"/>
    <id>http://www.coffeesweet.me/2016/09/06/新上线java工程的常规检查工作/</id>
    <published>2016-09-06T07:29:25.000Z</published>
    <updated>2016-09-06T07:48:11.226Z</updated>
    
    <content type="html"><![CDATA[<p>一个新的java服务工程虽然在开发和测试阶段会进行功能，压力等各种测试，但真正上线后为了保障正常的服务，需要进行一些常规的系统和资源占用情况查看，否则可能刚上线没问题，跑一段时间出现问题。<br><a id="more"></a></p>
<h2 id="环境约定"><a href="#环境约定" class="headerlink" title="环境约定"></a>环境约定</h2><ol>
<li>centos 6,centos 7等linux平台</li>
<li>jdk8</li>
</ol>
<h2 id="基本检查步骤"><a href="#基本检查步骤" class="headerlink" title="基本检查步骤"></a>基本检查步骤</h2><ol>
<li>top然后按F，再按Q，表示按照物理内存排序，查看自己的应用内存占用是否有问题（单位KB）//注意centos6和7的按键可能变更了，目的就是查看自己java工程的内存占用量是否稳定</li>
<li>ps aux|grep 自己的程序，查看自己的程序详细情况（内存单位KB）</li>
<li>jstat -gcutil <pid> ,查看gc情况</pid></li>
<li>jstack  <pid> , 查看运行堆栈情况</pid></li>
<li>lsof -p <pid> , 查看程序的文件句柄占用情况，单用户最高是65535，超过会被系统干掉，所以看这个数据是不是一直涨</pid></li>
<li>strace -tTFp <pid> ， 查看系统调用程序的栈信息<br>对于不是必现的后端存储访问超时排查，可以打strace的日志到文件，然后分析。</pid></li>
</ol>
<p><strong>注意</strong></p>
<div class="tip"><br>strace量很大 要做grep，例如：<br><br>strace -tTp pid 2&gt;&amp;1 | grep “[sendto recvfrom]”<br>strace 默认打印到stderr，所以要重定向到stdout（2&gt;&amp;1）之后才能grep<br></div>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个新的java服务工程虽然在开发和测试阶段会进行功能，压力等各种测试，但真正上线后为了保障正常的服务，需要进行一些常规的系统和资源占用情况查看，否则可能刚上线没问题，跑一段时间出现问题。&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.coffeesweet.me/categories/java/"/>
    
    
      <category term="java" scheme="http://www.coffeesweet.me/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot日志问题二：access日志定制设置</title>
    <link href="http://www.coffeesweet.me/2016/09/06/spring-boot%E6%97%A5%E5%BF%97%E9%97%AE%E9%A2%98%E4%BA%8C%EF%BC%9Aaccess%E6%97%A5%E5%BF%97%E5%AE%9A%E5%88%B6%E8%AE%BE%E7%BD%AE/"/>
    <id>http://www.coffeesweet.me/2016/09/06/spring-boot日志问题二：access日志定制设置/</id>
    <published>2016-09-06T03:56:29.000Z</published>
    <updated>2016-09-06T04:41:15.485Z</updated>
    
    <content type="html"><![CDATA[<p>spring默认的accesslog相关的配置项比较少，类似自定义日志名称的日期格式修改成小时等设置没有对外开放设置入口，需要自己扩展<br><a id="more"></a></p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>spring默认的accesslog相关的配置项比较少，只有如下几项：</p>
<p><strong>applicatio.propertie</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">server.tomcat.accesslog.directory=logs # Directory in which log files are created. Can be relative to the tomcat base dir or absolute.</div><div class="line">server.tomcat.accesslog.enabled=false # Enable access log.</div><div class="line">server.tomcat.accesslog.pattern=common # Format pattern for access logs.</div><div class="line">server.tomcat.accesslog.prefix=access_log # Log file name prefix.</div><div class="line">server.tomcat.accesslog.suffix=.log # Log file name suffix.</div></pre></td></tr></table></figure></p>
<ol>
<li>默认的fileDateFormat（日志文件输出规则，是按照天，还是小时等方式输出日志个数）是按照天的，格式：.yyyy-MM-dd 而且这个还不能在启动的时候或配置文件进行设置。</li>
<li>还有accessLogBufferedEnabled这个指定access日志是否缓冲输出的开关也无法在配置文件配置。</li>
</ol>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>在App.java中添加了定制程序：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * tomcat access 日志开关</div><div class="line"> */</div><div class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;server.tomcat.accesslog.enabled:false&#125;"</span>)</div><div class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> accessLogEnabled;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> *tomcat access 日志内容格式</div><div class="line"> */</div><div class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;server.tomcat.accesslog.pattern:common&#125;"</span>)</div><div class="line"><span class="keyword">private</span> String accessLogPattern;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * tomcat access 日志所在目录</div><div class="line"> */</div><div class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;server.tomcat.accesslog.directory:logs&#125;"</span>)</div><div class="line"><span class="keyword">private</span> String accessLogDirectory;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * tomcat access 日志名称前缀</div><div class="line"> */</div><div class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;server.tomcat.accesslog.prefix:access_log&#125;"</span>)</div><div class="line"><span class="keyword">private</span> String accessLogPrefix;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * tomcat access 日志名称后缀</div><div class="line"> */</div><div class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;server.tomcat.accesslog.suffix:.log&#125;"</span>)</div><div class="line"><span class="keyword">private</span> String accessLogSuffix;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Flag to determine if log rotation should occur. If set to false, then this file is</div><div class="line"> * never rotated and fileDateFormat is ignored. Default value: true</div><div class="line"> * <span class="doctag">@link</span> https://tomcat.apache.org/tomcat-7.0-doc/config/valve.html#Access_Log_Valve</div><div class="line"> * <span class="doctag">@link</span> http://stackoverflow.com/questions/23596157/spring-boot-tomcat-access-logs/35001421#35001421</div><div class="line"> */</div><div class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;server.tomcat.accesslog.rotatable:true&#125;"</span>)</div><div class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> accessLogRotatable;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Allows a customized timestamp in the access log file name. The file is rotated whenever</div><div class="line"> * the formatted timestamp changes. The default value is yyyy-MM-dd. If you wish to rotate</div><div class="line"> * every hour, then set this value to yyyy-MM-dd.HH. The date format will always be</div><div class="line"> * localized using the locale en_US.</div><div class="line"> * <span class="doctag">@link</span> https://tomcat.apache.org/tomcat-7.0-doc/config/valve.html#Access_Log_Valve</div><div class="line"> * <span class="doctag">@link</span> http://stackoverflow.com/questions/23596157/spring-boot-tomcat-access-logs/35001421#35001421</div><div class="line"> */</div><div class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;server.tomcat.accesslog.fileDateFormat:.yyyy-MM-dd.HH&#125;"</span>)</div><div class="line"><span class="keyword">private</span> String accessLogFileDateFormat;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * accessLog buffered output switch</div><div class="line"> */</div><div class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;server.tomcat.accesslog.accessLogBufferedEnabled:true&#125;"</span>)</div><div class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> accessLogBufferedEnabled;</div><div class="line"></div><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> TomcatEmbeddedServletContainerFactory <span class="title">tomcatEmbeddedServletContainerFactory</span><span class="params">()</span> </span>&#123;</div><div class="line">TomcatEmbeddedServletContainerFactory tomcatFactory = <span class="keyword">new</span> TomcatEmbeddedServletContainerFactory();</div><div class="line"></div><div class="line">tomcatFactory.addContextCustomizers(<span class="keyword">new</span> TomcatContextCustomizer() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">customize</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span> (Valve valve : context.getPipeline().getValves()) &#123;</div><div class="line">            <span class="keyword">if</span> (valve <span class="keyword">instanceof</span> org.apache.catalina.valves.AccessLogValve) &#123;</div><div class="line">                AccessLogValve accessLogValve = (AccessLogValve) valve;</div><div class="line">                accessLogValve.setPattern(accessLogPattern);</div><div class="line">                accessLogValve.setDirectory(accessLogDirectory);</div><div class="line">                accessLogValve.setPrefix(accessLogPrefix);</div><div class="line">                accessLogValve.setSuffix(accessLogSuffix);</div><div class="line">                accessLogValve.setRotatable(accessLogRotatable);</div><div class="line">                accessLogValve.setFileDateFormat(accessLogFileDateFormat);</div><div class="line"></div><div class="line">                <span class="comment">/* 关闭access的buffer输出 */</span></div><div class="line">                accessLogValve.setBuffered(accessLogBufferedEnabled);</div><div class="line">                <span class="comment">/*</span></div><div class="line">                 * 修改valve的属性后不需要添加到context了,再添加就变成多个valve了,会出现多个accesslog文件</div><div class="line">                 * 直接从context取出的valve类型强制转换后和原valve相等(equals和==都一样,对象引用没变)</div><div class="line">                 */</div><div class="line">                 <span class="comment">// context.getPipeline().addValve(accessLogValve);</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="keyword">return</span> tomcatFactory;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>注意：</strong></p>
<div class="tip"><br>这里需要用context.getPipeline()来处理valve，如果直接用tomcatFactory.addContextValves(contextValves);这种方式的话，打开access开关会发现有两个accesslog文件，一个是spring-boot默认的按照日期的，一个是咱们定制的按照小时的。当然，也可以修改accesslog的格式为logback支持的方式。<br></div>

<p><strong>参考文章</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">http://stackoverflow.com/questions/23596157/spring-boot-tomcat-access-logs/35001421#35001421</div><div class="line">http://stackoverflow.com/questions/28483064/how-do-i-configure-the-location-and-name-of-tomcat-access-log-in-spring-boot?rq=1</div><div class="line">http://stackoverflow.com/questions/20574972/spring-boot-jetty-tomcat-embedded-access-log-configuration?rq=1</div><div class="line">https://tomcat.apache.org/tomcat-7.0-doc/config/http.html</div><div class="line">https://tomcat.apache.org/tomcat-7.0-doc/config/valve.html#Access_Log_Valve</div><div class="line">http://www.tuicool.com/articles/ymyiuiu</div></pre></td></tr></table></figure></p>
<p><strong>修改后最终的配置支持如下：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#server.tomcat.access config</div><div class="line">server.tomcat.accesslog.enabled=true</div><div class="line">server.tomcat.accesslog.accessLogBufferedEnabled=false</div><div class="line">server.tomcat.accesslog.pattern=%&#123;X-Forwarded-For&#125;i %l %u %t &quot;%r&quot; %s %b %D</div><div class="line">#server.tomcat.accesslog.directory=logs</div><div class="line">#server.tomcat.accesslog.prefix=account-access</div><div class="line">#server.tomcat.accesslog.suffix=.log</div><div class="line">#server.tomcat.accesslog.fileDateFormat=.yyyy-MM-dd.HH</div></pre></td></tr></table></figure></p>
<p>注释的配置都在启动脚本里按照不同机器的端口号等进行设置了，配置生效的标准是先启动脚本命令行，再配置文件</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;spring默认的accesslog相关的配置项比较少，类似自定义日志名称的日期格式修改成小时等设置没有对外开放设置入口，需要自己扩展&lt;br&gt;
    
    </summary>
    
      <category term="spring-boot" scheme="http://www.coffeesweet.me/categories/spring-boot/"/>
    
    
      <category term="spring-boot,log,access" scheme="http://www.coffeesweet.me/tags/spring-boot-log-access/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot日志问题一：去除默认的console输出</title>
    <link href="http://www.coffeesweet.me/2016/08/31/spring-boot%E6%97%A5%E5%BF%97%E9%97%AE%E9%A2%98%E4%B8%80%EF%BC%9A%E5%8E%BB%E9%99%A4%E9%BB%98%E8%AE%A4%E7%9A%84console%E8%BE%93%E5%87%BA/"/>
    <id>http://www.coffeesweet.me/2016/08/31/spring-boot日志问题一：去除默认的console输出/</id>
    <published>2016-08-31T12:51:37.000Z</published>
    <updated>2016-09-01T10:03:14.150Z</updated>
    
    <content type="html"><![CDATA[<p>日志是生产环境非常重要的配置,在迁移老的工程到spring-boot时日志的设置兼容很重要,以下是自己在配置日志的时候由于不仔细导致的一些问题备注一下<br><a id="more"></a></p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>spring boot 默认的日志是console输出，但线上一般都是file输出，所以想修改spring boot的默认输出端</p>
<h2 id="官方文档链接"><a href="#官方文档链接" class="headerlink" title="官方文档链接"></a>官方文档链接</h2><p><a href="http://docs.spring.io/spring-boot/docs/current/reference/html/howto-logging.html" target="_blank" rel="external">http://docs.spring.io/spring-boot/docs/current/reference/html/howto-logging.html</a></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>按照官方文档怎么配置都关闭不掉，console和file都会输出，随后又查看了以下两篇文章</p>
<p><a href="http://stackoverflow.com/questions/31935151/prevent-spring-boot-from-printing-logs-to-console" target="_blank" rel="external">http://stackoverflow.com/questions/31935151/prevent-spring-boot-from-printing-logs-to-console</a><br><a href="http://stackoverflow.com/questions/26019350/how-to-disable-logback-consoleappender-in-spring-boot/34852737#34852737" target="_blank" rel="external">http://stackoverflow.com/questions/26019350/how-to-disable-logback-consoleappender-in-spring-boot/34852737#34852737</a></p>
<p>没仔细看的话，还是不好使，最后给spring boot 的github发了issue:</p>
<p><a href="https://github.com/spring-projects/spring-boot/issues/5978" target="_blank" rel="external">https://github.com/spring-projects/spring-boot/issues/5978</a></p>
<p>查看了作者的回复，有仔细查看了spring-boot有关logback的文档：</p>
<p><a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot/src/main/resources/org/springframework/boot/logging/logback" target="_blank" rel="external">https://github.com/spring-projects/spring-boot/tree/master/spring-boot/src/main/resources/org/springframework/boot/logging/logback</a></p>
<p>结合之前两篇stackoverflow的文章发现spring-boot的1.3.1以后的defaults.xml和base.xml不一样，base.xml里包含了console的appender，所以不能include base.xml，要include defaults.xml.然后自己定义file的appender,最后配置完成logback.xml后ok</p>
<p><strong>注意:</strong></p>
<div class="tip"><br>    logback.xml或是logback-spring.xml配置文件一定要放到classpath下，默认直接resources的根目录下就可以，但如果你自己特殊的文件夹就需要指定下，比如我自己定义了专门放置配置文件的目录config，那么我首先要在classpath里加入config所在目录，然后指定logback或logback-spring.xml的位置如下：<br></div>

<p><strong>application.properties</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#------------------------</div><div class="line"># log</div><div class="line">#------------------------</div><div class="line">logging.file=account.log</div><div class="line">logging.config=classpath:config/logback-spring.xml</div></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>spring-boot-1.3.1版本和以后的版本在logback里要include defaults.xml,然后自定义自己的的file-appender</li>
<li>logback.xml一定要放到classpath下 </li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日志是生产环境非常重要的配置,在迁移老的工程到spring-boot时日志的设置兼容很重要,以下是自己在配置日志的时候由于不仔细导致的一些问题备注一下&lt;br&gt;
    
    </summary>
    
      <category term="spring-boot" scheme="http://www.coffeesweet.me/categories/spring-boot/"/>
    
    
      <category term="spring-boot,log,console" scheme="http://www.coffeesweet.me/tags/spring-boot-log-console/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.coffeesweet.me/2016/08/26/hello-world/"/>
    <id>http://www.coffeesweet.me/2016/08/26/hello-world/</id>
    <published>2016-08-26T06:24:56.273Z</published>
    <updated>2016-08-26T06:24:56.273Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
